/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-09-18 12:18:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class volunteer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("   \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "userheader.jsp", out, false);
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Join As Volunteer</title>\r\n");
      out.write(" <!-- Font Awesome CDN -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("    <!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("\r\n");
      out.write("  <!-- Favicon -->\r\n");
      out.write("  <link href=\"img/favicon.ico\" rel=\"icon\" />\r\n");
      out.write("\r\n");
      out.write("  <!-- Google Web Fonts -->\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"  />\r\n");
      out.write("  <link\r\n");
      out.write("    href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500&family=Quicksand:wght@600;700&display=swap\"\r\n");
      out.write("    rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("  <!-- Icon Font Stylesheet -->\r\n");
      out.write("  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("  <!-- Libraries Stylesheet -->\r\n");
      out.write("  <link href=\"lib/animate/animate.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("  <link href=\"lib/lightbox/css/lightbox.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("  <link href=\"lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("  <!-- Customized Bootstrap Stylesheet -->\r\n");
      out.write("  <link href=\"css1/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("  <!-- Template Stylesheet -->\r\n");
      out.write("  <link href=\"css1/style.css\" rel=\"stylesheet\" />\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("        line-height: 1.6;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("        max-width: 1200px;\r\n");
      out.write("        margin: 0 auto;\r\n");
      out.write("        padding: 0 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .text-center {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title {\r\n");
      out.write("        font-size: 48px;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .content {\r\n");
      out.write("        padding: 40px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group {\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("         \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    label {\r\n");
      out.write("        display: block;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        margin-bottom: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"text\"],\r\n");
      out.write("    input[type=\"email\"] {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        background-color:#e0e0e0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .checkbox-group label {\r\n");
      out.write("        display: block;\r\n");
      out.write("        margin-bottom: 5px;s\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .submit-btn {\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        padding: 10px 20px;\r\n");
      out.write("        background-color: #4CAF50;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .submit-btn:hover {\r\n");
      out.write("        background-color: #45a049;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("</style>\r\n");
      out.write("  </head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- Sidebar with Content Section -->\r\n");
      out.write("<div class=\"with-sidebar-wrapper\">\r\n");
      out.write("    <section id=\"content-section-1\">\r\n");
      out.write("        <div class=\"parallax-wrapper\" style=\"background-image: url('https://www.wti.org.in/wp-content/uploads/2021/10/VOLUNTEER_Header-image.jpg'); padding-top: 280px; padding-bottom: 160px;\">\r\n");
      out.write("            <style>\r\n");
      out.write("                @media only screen and (max-width: 767px) {\r\n");
      out.write("                    .parallax-wrapper {\r\n");
      out.write("                        background-image: url('https://www.wti.org.in/wp-content/uploads/2021/10/VOLUNTEER_Header-Mobile.jpg') !important;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            </style>\r\n");
      out.write("            <div class=\"container text-center\">\r\n");
      out.write("                <h1 class=\"title\" style=\"color: #fff;\">VOLUNTEER</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <section id=\"content-section-2\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"content\">\r\n");
      out.write("                <p>If you wish to donate your time and skills to the cause of wildlife conservation, click here. We will match your skills with our needs and contact you if there is something you can contribute to.</p>\r\n");
      out.write("                <form action=\"VolunteerServlet\" method=\"post\" class=\"volunteer-form\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"your-name\">Name*</label>\r\n");
      out.write("                        <input type=\"text\" id=\"your-name\" name=\"your-name\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"address\">Address*</label>\r\n");
      out.write("                        <input type=\"text\" id=\"address\" name=\"address\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"phone-number\">Phone Number*</label>\r\n");
      out.write("                        <input type=\"text\" id=\"phone-number\" name=\"phone-number\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"your-email\">Your Email ID*</label>\r\n");
      out.write("                        <input type=\"email\" id=\"your-email\" name=\"your-email\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"age\">Age (18 and older)*</label>\r\n");
      out.write("                        <input type=\"text\" id=\"age\" name=\"age\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label>Skill Set*</label>\r\n");
      out.write("                        <div class=\"checkbox-group\">\r\n");
      out.write("                            <label><input type=\"checkbox\" name=\"skill-set[]\" value=\"Veterinary\"> Veterinary</label>\r\n");
      out.write("                            <label><input type=\"checkbox\" name=\"skill-set[]\" value=\"Sociology\"> Sociology</label>\r\n");
      out.write("                            <label><input type=\"checkbox\" name=\"skill-set[]\" value=\"Ecology\"> Ecology</label>\r\n");
      out.write("                            <!-- Add more skill options as needed -->\r\n");
      out.write("                            <label><input type=\"checkbox\" name=\"skill-set[]\" value=\"Any other - specify\"> Any other - specify</label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"experience\">Years of Experience in Relevant Skill*</label>\r\n");
      out.write("                        <input type=\"text\" id=\"experience\" name=\"experience\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"time\">How Many Hours per Week Are You Willing to Commit?*</label>\r\n");
      out.write("                        <input type=\"text\" id=\"time\" name=\"time\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <button type=\"submit\" class=\"submit-btn\">Submit</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("</div>\r\n");
      out.write("   	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "userfooter.jsp", out, false);
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("  window.watsonAssistantChatOptions = {\r\n");
      out.write("    integrationID: \"40f6535b-f4fd-4da5-9334-91599b86c0b0\", // The ID of this integration.\r\n");
      out.write("    region: \"au-syd\", // The region your integration is hosted in.\r\n");
      out.write("    serviceInstanceID: \"eab37542-ac5e-4718-8d4f-787f12a29357\", // The ID of your service instance.\r\n");
      out.write("    onLoad: async (instance) => { await instance.render(); }\r\n");
      out.write("  };\r\n");
      out.write("  setTimeout(function(){\r\n");
      out.write("    const t=document.createElement('script');\r\n");
      out.write("    t.src=\"https://web-chat.global.assistant.watson.appdomain.cloud/versions/\" + (window.watsonAssistantChatOptions.clientVersion || 'latest') + \"/WatsonAssistantChatEntry.js\";\r\n");
      out.write("    document.head.appendChild(t);\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("		\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
