/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-09-18 12:25:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n");
      out.write("    <div class=\"navbar-brand-wrapper d-flex align-items-center\">\r\n");
      out.write("        <a class=\"navbar-brand brand-logo\" href=\"dashboard.jsp\">\r\n");
      out.write("            <strong style=\"color: white;\">WildHaven</strong>\r\n");
      out.write("        </a>\r\n");
      out.write("        <a class=\"navbar-brand brand-logo-mini\" href=\"dashboard.jsp\"><img src=\"images/logo-mini.svg\" alt=\"logo\" /></a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"navbar-menu-wrapper d-flex align-items-center flex-grow-1\">\r\n");
      out.write("        <h5 class=\"mb-0 font-weight-medium d-none d-lg-flex text-capitalize\">\r\n");
      out.write("            ");

                String adminName = (String) session.getAttribute("adminName");
            
      out.write("\r\n");
      out.write("            ");
      out.print( adminName != null ? adminName : "" );
      out.write(" \r\n");
      out.write("            Welcome to the dashboard!\r\n");
      out.write("        </h5>\r\n");
      out.write("        <ul class=\"navbar-nav navbar-nav-right ml-auto\">\r\n");
      out.write("            <li class=\"nav-item dropdown d-none d-xl-inline-flex user-dropdown\">\r\n");
      out.write("                <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("                    <img class=\"img-xs rounded-circle ml-2\" src=\"images/faces/face8.jpg\" alt=\"Profile image\"> \r\n");
      out.write("                    <span class=\"font-weight-normal text-capitalize\">\r\n");
      out.write("                        ");
      out.print( adminName != null ? adminName : "" );
      out.write("\r\n");
      out.write("                    </span>\r\n");
      out.write("                </a>\r\n");
      out.write("                <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n");
      out.write("                    <div class=\"dropdown-header text-center\">\r\n");
      out.write("                        <img class=\"img-md rounded-circle\" src=\"images/faces/face8.jpg\" alt=\"Profile image\">\r\n");
      out.write("                        <p class=\"mb-1 mt-3 text-capitalize\">\r\n");
      out.write("                            ");
      out.print( adminName != null ? adminName : "" );
      out.write("\r\n");
      out.write("                        </p>\r\n");
      out.write("                        ");

                            String adminEmail = (String) session.getAttribute("adminEmail");
                        
      out.write("\r\n");
      out.write("                        <p class=\"font-weight-light text-muted mb-0\">\r\n");
      out.write("                            ");
      out.print( adminEmail != null ? adminEmail : "" );
      out.write("\r\n");
      out.write("                        </p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <a class=\"dropdown-item\" href=\"#\"><i class=\"dropdown-item-icon icon-user text-primary\"></i> My Profile</a>\r\n");
      out.write("                    \r\n");
      out.write("                    <a class=\"dropdown-item\" href=\"/IBM_PROJECTS_OJT2024/LogoutServlet\"><i class=\"dropdown-item-icon icon-user text-primary\"></i>Logout</a>  \r\n");
      out.write("                   \r\n");
      out.write("                    \r\n");
      out.write("                </div>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n");
      out.write("            <span class=\"icon-menu\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
