/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-09-18 12:21:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class adopt_005fspecies_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "userheader.jsp", out, false);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Adopt a Species</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* Container Styling for Full Width */\r\n");
      out.write(".adopt-container-fullwidth {\r\n");
      out.write("    width: 90%; /* Use 90% of the viewport width */\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Heading Styling for Full Width */\r\n");
      out.write(".adopt-heading-fullwidth {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #2c3e50;\r\n");
      out.write("    font-size: 28px;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Form Styling for Full Width */\r\n");
      out.write(".adopt-form-fullwidth {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Form Group Styling for Full Width */\r\n");
      out.write(".form-group-fullwidth {\r\n");
      out.write("    margin-bottom: 15px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Label Styling for Full Width */\r\n");
      out.write(".adopt-label-fullwidth {\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    margin-bottom: 5px;\r\n");
      out.write("    color: #34495e;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Input and Textarea Styling for Full Width */\r\n");
      out.write(".adopt-input-fullwidth,\r\n");
      out.write(".adopt-textarea-fullwidth {\r\n");
      out.write("    width: 100%; /* Make input fields full width */\r\n");
      out.write("    padding: 15px; /* Slightly larger padding for a modern feel */\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    transition: border-color 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".adopt-input-fullwidth:focus,\r\n");
      out.write(".adopt-textarea-fullwidth:focus {\r\n");
      out.write("    border-color: #3498db;\r\n");
      out.write("    outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Button Styling for Full Width */\r\n");
      out.write(".adopt-button-fullwidth {\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    background-color: #3498db;\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease-in-out;\r\n");
      out.write("    width: 100%; /* Full-width button */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".adopt-button-fullwidth:hover {\r\n");
      out.write("    background-color: #2980b9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"adopt-container-fullwidth\">\r\n");
      out.write("    <h2 class=\"adopt-heading-fullwidth\"><b>Adopt a Species</b></h2>\r\n");
      out.write("    <form action=\"AdoptSpeciesServlet\" method=\"post\" class=\"adopt-form-fullwidth\">\r\n");
      out.write("        <div class=\"form-group-fullwidth\">\r\n");
      out.write("            <label for=\"species\" class=\"adopt-label-fullwidth\">Species:</label>\r\n");
      out.write("            <input type=\"text\" id=\"species\" name=\"species\" class=\"adopt-input-fullwidth\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group-fullwidth\">\r\n");
      out.write("            <label for=\"fullName\" class=\"adopt-label-fullwidth\">Full Name:</label>\r\n");
      out.write("            <input type=\"text\" id=\"fullName\" name=\"fullName\" class=\"adopt-input-fullwidth\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group-fullwidth\">\r\n");
      out.write("            <label for=\"email\" class=\"adopt-label-fullwidth\">Email:</label>\r\n");
      out.write("            <input type=\"email\" id=\"email\" name=\"email\" class=\"adopt-input-fullwidth\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group-fullwidth\">\r\n");
      out.write("            <label for=\"message\" class=\"adopt-label-fullwidth\">Message:</label>\r\n");
      out.write("            <textarea id=\"message\" name=\"message\" rows=\"4\" class=\"adopt-textarea-fullwidth\"></textarea>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\" class=\"adopt-button-fullwidth\">Adopt Now</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <script>\r\n");
      out.write("  window.watsonAssistantChatOptions = {\r\n");
      out.write("    integrationID: \"40f6535b-f4fd-4da5-9334-91599b86c0b0\", // The ID of this integration.\r\n");
      out.write("    region: \"au-syd\", // The region your integration is hosted in.\r\n");
      out.write("    serviceInstanceID: \"eab37542-ac5e-4718-8d4f-787f12a29357\", // The ID of your service instance.\r\n");
      out.write("    onLoad: async (instance) => { await instance.render(); }\r\n");
      out.write("  };\r\n");
      out.write("  setTimeout(function(){\r\n");
      out.write("    const t=document.createElement('script');\r\n");
      out.write("    t.src=\"https://web-chat.global.assistant.watson.appdomain.cloud/versions/\" + (window.watsonAssistantChatOptions.clientVersion || 'latest') + \"/WatsonAssistantChatEntry.js\";\r\n");
      out.write("    document.head.appendChild(t);\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "userfooter.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
